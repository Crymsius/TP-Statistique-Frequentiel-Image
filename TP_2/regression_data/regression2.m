%load de image Ia, Ib et matchesglobal Ia = double(imread('keble_a.jpg'));global Ib = double(imread('keble_b.jpg'));global Ic = double(imread('keble_c.jpg'));data = load('matchesab.txt');data2 = load('matchesbc.txt');avecinverse = 0;triple = 1;Points = [[590 369 299 364];[405 295 115 293];[652 112 364 123];[340 92 49 77]];%calcul de H%H = homographie(Points);H = ransac(data, 6,15,4);%coins de l'image (on suppose 2 images de même dimension)A = [0;0;1];B = [size(Ia,2);0;1];C = [size(Ia,2);size(Ia,1);1];D = [0;size(Ia,1);1];%coins de l'image par l'homographieA2 = H*A;B2 = H*B;C2 = H*C;D2 = H*D;%calcul des min et max des coins de l'image totalePoints = [A2/A2(3) B2/B2(3) C2/C2(3) D2/D2(3) A B C D];X11 = min(Points(1,:));X12 = max(Points(1,:));Y11 = min(Points(2,:));Y12 = max(Points(2,:));%calcul de l'image transforméeIma1 = vgg_warp_H(Ia, H, 'linear',[X11, X12, Y11, Y12]);Imb1 = vgg_warp_H(Ib, eye(3), 'linear',[X11, X12, Y11, Y12]);Imtotal1= max(Ima1,Imb1);if avecinverse   Hinv = inv(H);  %coins de l'image par l'homographie  A2 = Hinv*A;  B2 = Hinv*B;  C2 = Hinv*C;  D2 = Hinv*D;  %calcul des min et max des coins de l'image totale  Points = [A2/A2(3) B2/B2(3) C2/C2(3) D2/D2(3) A B C D];  X21 = min(Points(1,:));  X22 = max(Points(1,:));  Y21 = min(Points(2,:));  Y22 = max(Points(2,:));  Ima2 = vgg_warp_H(Ia, eye(3), 'linear',[X21, X22, Y21, Y22]);  Imb2 = vgg_warp_H(Ib, Hinv, 'linear',[X21, X22, Y21, Y22]);  Imtotal3= max(Ima2,Imb2);elseif triple  %calcul de H  H2 = inv(ransac(data2, 6,15,4));    %coins de l'image par l'homographie  A3 = H2*A;  B3 = H2*B;  C3 = H2*C;  D3 = H2*D;    %calcul des min et max des coins de l'image totale (Ia+Ib+Ic)  Points = [A3/A3(3) B3/B3(3) C3/C3(3) D3/D3(3) A2/A2(3) B2/B2(3) C2/C2(3) D2/D2(3) A B C D];  X31 = min(Points(1,:));  X32 = max(Points(1,:));  Y31 = min(Points(2,:));  Y32 = max(Points(2,:));  %calcul de l'image transformée  Ima1 = vgg_warp_H(Ia, H, 'linear',[X31, X32, Y31, Y32]);  Imb1 = vgg_warp_H(Ib, eye(3), 'linear',[X31, X32, Y31, Y32]);  Imc1 = vgg_warp_H(Ic, H2, 'linear',[X31, X32, Y31, Y32]);  Imtotal3= max(max(Ima1,Imb1),Imc1);     end%affichageif avecinverse  image(uint8(Imtotal1),'Parent',subplot(1,2,1));  axis equal;  image(uint8(Imtotal2),'Parent',subplot(1,2,2));  axis equal;elseif triple  image(uint8(Imtotal3));  axis equal;else  image(uint8(Imtotal1));  axis equal;end